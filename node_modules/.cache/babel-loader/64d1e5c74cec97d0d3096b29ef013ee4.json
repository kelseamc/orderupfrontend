{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lee/Flatiron/code2/orderupfrontend/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport { Route, Switch, useHi } from \"react-router-dom\";\nimport OrderConfirmation from \"./pages/OrderConfirmation\";\nimport OrderContainer from \"./pages/OrderContainer\";\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  _s();\n\n  const [menuItems, setMenuItems] = useState([]);\n  const [addedItems, setAddedItems] = useState([]);\n  const [category, setCategory] = useState(\"appetizer\");\n  const [order, setOrder] = useState({});\n  const [orderedItems, setOrderedItems] = useState([]); // const [orderTotal, setOrderTotal] = useState(0)\n\n  const history = useHistory();\n  useEffect(() => {\n    fetch(\"http://localhost:3001/api/v1/menu_items\").then(r => r.json()).then(itemArray => {\n      setMenuItems(itemArray);\n    });\n  }, []);\n  /******************** CRUD handling  *****************************/\n\n  function handleNewOrder(orderObj) {\n    setOrder(orderObj);\n    console.log(orderObj);\n    addedItems.forEach(item => {\n      const orderItem = {\n        menu_item_id: item.id,\n        order_id: orderObj.id,\n        quantity: item.quantity\n      };\n      fetch(\"http://localhost:3001/api/v1/order_items\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(orderItem)\n      }).then(r => r.json()).then(orderItemDb => {\n        setOrderedItems([...orderedItems, orderItemDb]);\n      });\n      history.push(`/orders/${newOrder.id}`);\n      console.log(orderedItems);\n    });\n  }\n  /******************** Handling Ordered Items *****************************/\n\n\n  function handleAddItem(itemId) {\n    const findItem = addedItems.find(i => i.id === itemId);\n\n    if (findItem) {\n      const updateAdded = addedItems.filter(i => {\n        if (i.id === itemId) {\n          let add = i.quantity++;\n          return { ...i,\n            quantity: add\n          };\n        } else {\n          return i;\n        }\n      });\n      setAddedItems(updateAdded);\n    } else {\n      let newItem = menuItems.find(item => item.id === itemId);\n      newItem = { ...newItem,\n        quantity: 1\n      };\n      setAddedItems([...addedItems, newItem]);\n    }\n  }\n\n  function onSubtract(id) {\n    const updatedOrderItems = addedItems.filter(i => {\n      if (i.id === id) {\n        if (i.quantity > 1) {\n          let sub = i.quantity - 1;\n          console.log(sub);\n          i[\"quantity\"] = sub;\n          return { ...i,\n            quantity: sub\n          };\n        }\n      } else {\n        return i;\n      }\n    });\n    setAddedItems(updatedOrderItems);\n  }\n\n  console.log(addedItems);\n  /******************** Filtering *****************************/\n\n  const filteredMenuItems = menuItems.filter(item => item.category === category);\n  let total = 0;\n  const orderTotal = addedItems.map(item => {\n    let price = item.price * item.quantity;\n    total = total + price;\n  });\n  console.log(total);\n  /******************** JSX *****************************/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Home, {\n            menuItems: filteredMenuItems,\n            onAddItem: handleAddItem,\n            addedItems: addedItems,\n            category: category,\n            setCategory: setCategory,\n            total: total\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/orders/new\",\n          children: /*#__PURE__*/_jsxDEV(OrderContainer, {\n            addedItems: addedItems,\n            onSubtract: onSubtract,\n            onAddClick: handleAddItem,\n            onNewOrder: handleNewOrder,\n            total: total\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/orders/:id\",\n          children: /*#__PURE__*/_jsxDEV(OrderConfirmation, {\n            orderedItems: orderedItems,\n            order: order,\n            total: total\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"+zOvrHrFr3rfQNHuNLJaZq1IJNw=\", true);\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lee/Flatiron/code2/orderupfrontend/src/components/App.js"],"names":["React","useState","useEffect","Header","Route","Switch","useHi","OrderConfirmation","OrderContainer","Home","App","menuItems","setMenuItems","addedItems","setAddedItems","category","setCategory","order","setOrder","orderedItems","setOrderedItems","history","useHistory","fetch","then","r","json","itemArray","handleNewOrder","orderObj","console","log","forEach","item","orderItem","menu_item_id","id","order_id","quantity","method","headers","body","JSON","stringify","orderItemDb","push","newOrder","handleAddItem","itemId","findItem","find","i","updateAdded","filter","add","newItem","onSubtract","updatedOrderItems","sub","filteredMenuItems","total","orderTotal","map","price"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Header from \"./Header\"\nimport { Route, Switch, useHi } from \"react-router-dom\";\nimport OrderConfirmation from \"./pages/OrderConfirmation\"\nimport OrderContainer from \"./pages/OrderContainer\"\nimport Home from \"./pages/Home\"\n\n\n\nfunction App() {\n    const [menuItems, setMenuItems] = useState([])\n    const [addedItems, setAddedItems] = useState([])\n    const [category, setCategory] = useState(\"appetizer\")\n    const [order, setOrder] = useState({})\n    const [orderedItems, setOrderedItems ] = useState([])\n    // const [orderTotal, setOrderTotal] = useState(0)\n    \n    const history = useHistory()\n\n   \n\n\n    useEffect(() => {\n        fetch(\"http://localhost:3001/api/v1/menu_items\")\n        .then(r => r.json())\n        .then((itemArray) => {\n            setMenuItems(itemArray)\n        })\n    }, [])\n\n/******************** CRUD handling  *****************************/\n\nfunction handleNewOrder(orderObj){\n    setOrder(orderObj)\n    console.log(orderObj)\n\n    addedItems.forEach((item) => {\n        const orderItem = {menu_item_id: item.id, order_id: orderObj.id, quantity: item.quantity }\n        fetch(\"http://localhost:3001/api/v1/order_items\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(orderItem)\n        })\n        .then(r => r.json())\n        .then((orderItemDb) => {\n            setOrderedItems([...orderedItems, orderItemDb])\n\n        })\n        history.push(`/orders/${newOrder.id}`)\n        console.log(orderedItems)\n    })\n}\n\n\n/******************** Handling Ordered Items *****************************/\n    \n    function handleAddItem(itemId) {\n        const findItem = addedItems.find((i) => i.id === itemId)\n        if (findItem) {\n           const updateAdded = addedItems.filter((i) => {\n            if (i.id === itemId) {\n                let add = i.quantity ++\n                return {...i, quantity: add}\n                }\n            else {\n                return i\n            }\n            })\n            setAddedItems(updateAdded)\n            \n            }\n        else {\n                let newItem = menuItems.find((item) => item.id === itemId)\n                newItem = {...newItem, quantity: 1}\n                setAddedItems([...addedItems, newItem])\n             }\n    }    \n    \n\n    function onSubtract(id){\n        const updatedOrderItems = addedItems.filter((i) =>{\n            if (i.id === id) {\n                if(i.quantity > 1) {\n                    let sub = i.quantity - 1\n                    console.log(sub)\n                    i[\"quantity\"] = sub\n                    return {...i, quantity: sub}\n                } \n            }\n            else {\n                return i\n            }\n            \n        } )\n        setAddedItems(updatedOrderItems)\n    }\n\n    console.log(addedItems)\n/******************** Filtering *****************************/\n\n\n   const filteredMenuItems = menuItems.filter((item) => item.category === category)\n   let total = 0 \n   const orderTotal = addedItems.map((item) => {\n       let price = item.price * item.quantity\n       total = total + price\n   }) \n\n   console.log(total)\n\n/******************** JSX *****************************/\n\n        \n    return(\n        <div className=\"app\">\n        <div className=\"header\"><Header /></div>\n        <div className=\"body\">\n        <Switch>\n            <Route exact path=\"/\" >\n                <Home \n                menuItems={filteredMenuItems} \n                onAddItem={handleAddItem} \n                addedItems={addedItems} \n                category={category} \n                setCategory={setCategory}\n                total={total}\n                />\n            </Route>\n            <Route exact path=\"/orders/new\" >\n                <OrderContainer \n                addedItems={addedItems} \n                onSubtract={onSubtract} \n                onAddClick={handleAddItem} \n                onNewOrder={handleNewOrder} \n                total={total}\n            />\n            </Route>\n            <Route exact path=\"/orders/:id\" >\n                <OrderConfirmation \n                orderedItems={orderedItems}\n                order={order}\n                total={total}\n                />\n            </Route>\n           \n        </Switch>\n        </div>\n        </div>\n    )\n}\nexport default App; "]},"metadata":{},"sourceType":"module"}